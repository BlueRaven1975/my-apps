name: python-hello-world

on:
  push:
    branches:
      - main
    paths:
      - 'python-hello-world/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: '{{defaultContext}}:python-hello-world'
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/python-hello-world:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/python-hello-world:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy compose file
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.ACTIONS_SA_KEY }}
          source: 'python-hello-world/compose.yaml'
          target: '~'

      - name: Start the application
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.ACTIONS_SA_KEY }}
          script: |
            cd ~/python-hello-world
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/python-hello-world:latest
            docker-compose down
            docker-compose up -d --force-recreate
            DANGLING_IMAGES=$(docker images -f dangling=true -q)
            if [ -n "$DANGLING_IMAGES" ]; then
              docker rmi $DANGLING_IMAGES
            fi
